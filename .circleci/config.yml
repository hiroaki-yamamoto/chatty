version: 2.1

jobs:
  test-message:
    docker:
      - image: golang
        environment:
          GO111MODULE: 'on'
          DEVEL: 'true'
          CONFIG_NAME: devel
          PKG_NAME: message
      - image: mongo
        name: testdb
        environment:
          MONGO_INITDB_ROOT_USERNAME: real
          MONGO_INITDB_ROOT_PASSWORD: real
      - image: nats
        name: testbroker
    steps: &service_step
      - checkout
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ checksum "backend/go.sum" }}'
      - run:
          name: "Get Dependencies"
          command: "go mod download"
          working_directory: backend
      - save_cache:
          key: '{{ .Branch }}-{{ checksum "backend/go.sum" }}'
          paths:
            - "/go"
      - run:
          name: "Copy Configuration File"
          command: |
            mkdir -p ${HOME}/etc
            cp -r config ${HOME}/etc/real
      - run:
          name: "Test"
          command: go test ./${PKG_NAME}/...
          working_directory: backend
  build:
    docker:
      - image: golang
        environment:
          GO111MODULE: 'on'
    steps:
      - checkout
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ checksum "backend/go.sum" }}'
      - run:
          name: "Get Dependencies"
          command: "go mod download"
          working_directory: backend
      - save_cache:
          key: '{{ .Branch }}-{{ checksum "backend/go.sum" }}'
          paths:
            - "/go"
      # Add Service Build Steps Below
      - run:
          name: "Build Message Service"
          environment:
            PKG_NAME: message
          command: go build -o ../bin/${PKG_NAME} ./${PKG_NAME}
          working_directory: backend
      # Add Service Build Steps Above
      - store_artifacts:
          path: ./bin
          destination: backend
  frontendBuild:
    docker:
      - image: node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - '{{ .Branch }}-{{ checksum "./frontend/package-lock.json" }}'
      - run:
          name: "Install Frontend Dependencies"
          working_directory: frontend
          command: npm i
      - save_cache:
          key: '{{ .Branch }}-{{ checksum "./frontend/package-lock.json" }}'
          paths:
            - "./frontend/node_modules"
      - run:
          name: "Lint"
          working_directory: frontend
          command: npm run lint
      - run:
          name: "Build the script"
          working_directory: frontend
          command: npm run build -- --prod --no-progress
      - store_artifacts:
          path: ./frontend/dist
          destination: frontend

release_filter: &release_filter
  tags:
    only: /^(?:[0-9]+\.){2}[0-9].*/
  branches:
    ignore: /.*/

dev_filter: &dev_filter
  tags:
    ignore: /^(?:[0-9]+\.){2}[0-9].*/

workflows:
  version: 2
  default:
    jobs:
      - test-message:
          filters:
            << : *dev_filter
      - build:
          requires:
            - test-message
          filters:
            << : *dev_filter
      - frontendBuild:
          filters:
            << : *dev_filter
  version_tag:
    jobs:
      - test-message:
          filters:
            << : *release_filter
      - build:
          requires:
            - test-message
          filters:
            << : *release_filter
      - frontendBuild:
          filters:
            << : *release_filter
