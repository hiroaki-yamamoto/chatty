// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatsResponse struct {
	TopicId              string               `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
	NumMsgs              uint32               `protobuf:"varint,2,opt,name=numMsgs,proto3" json:"numMsgs,omitempty"`
	LastDump             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=lastDump,proto3" json:"lastDump,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatsResponse) Reset()         { *m = StatsResponse{} }
func (m *StatsResponse) String() string { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()    {}
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{0}
}

func (m *StatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsResponse.Unmarshal(m, b)
}
func (m *StatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsResponse.Marshal(b, m, deterministic)
}
func (m *StatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsResponse.Merge(m, src)
}
func (m *StatsResponse) XXX_Size() int {
	return xxx_messageInfo_StatsResponse.Size(m)
}
func (m *StatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatsResponse proto.InternalMessageInfo

func (m *StatsResponse) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

func (m *StatsResponse) GetNumMsgs() uint32 {
	if m != nil {
		return m.NumMsgs
	}
	return 0
}

func (m *StatsResponse) GetLastDump() *timestamp.Timestamp {
	if m != nil {
		return m.LastDump
	}
	return nil
}

type StatsRequest struct {
	TopicId              string   `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{1}
}

func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

func (m *StatsRequest) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

func init() {
	proto.RegisterType((*StatsResponse)(nil), "StatsResponse")
	proto.RegisterType((*StatsRequest)(nil), "StatsRequest")
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_b4756a0aec8b9d44) }

var fileDescriptor_b4756a0aec8b9d44 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x2e, 0x49, 0x2c,
	0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0x92, 0x4f, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5,
	0x07, 0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x20,
	0x0a, 0x94, 0xaa, 0xb9, 0x78, 0x83, 0x41, 0xea, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53,
	0x85, 0x24, 0xb8, 0xd8, 0x4b, 0xf2, 0x0b, 0x32, 0x93, 0x3d, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x60, 0x5c, 0x90, 0x4c, 0x5e, 0x69, 0xae, 0x6f, 0x71, 0x7a, 0xb1, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0x6f, 0x10, 0x8c, 0x2b, 0x64, 0xc6, 0xc5, 0x91, 0x93, 0x58, 0x5c, 0xe2, 0x52, 0x9a,
	0x5b, 0x20, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa5, 0x07, 0xb1, 0x58, 0x0f, 0x66, 0xb1,
	0x5e, 0x08, 0xcc, 0xe2, 0x20, 0xb8, 0x5a, 0x25, 0x0d, 0x2e, 0x1e, 0xa8, 0xe5, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0xb8, 0xed, 0x36, 0xb2, 0xe2, 0xe2, 0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x05,
	0x6b, 0x10, 0xd2, 0xe2, 0x62, 0x05, 0x7b, 0x53, 0x88, 0x57, 0x0f, 0xd9, 0x04, 0x29, 0x3e, 0x3d,
	0x14, 0xdf, 0x68, 0x30, 0x1a, 0x30, 0x3a, 0xb1, 0x46, 0x31, 0x17, 0x15, 0x24, 0x27, 0xb1, 0x81,
	0x9d, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x50, 0xd3, 0x96, 0x20, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageStatsClient is the client API for MessageStats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageStatsClient interface {
	Stats(ctx context.Context, opts ...grpc.CallOption) (MessageStats_StatsClient, error)
}

type messageStatsClient struct {
	cc *grpc.ClientConn
}

func NewMessageStatsClient(cc *grpc.ClientConn) MessageStatsClient {
	return &messageStatsClient{cc}
}

func (c *messageStatsClient) Stats(ctx context.Context, opts ...grpc.CallOption) (MessageStats_StatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessageStats_serviceDesc.Streams[0], "/MessageStats/stats", opts...)
	if err != nil {
		return nil, err
	}
	x := &messageStatsStatsClient{stream}
	return x, nil
}

type MessageStats_StatsClient interface {
	Send(*StatsRequest) error
	Recv() (*StatsResponse, error)
	grpc.ClientStream
}

type messageStatsStatsClient struct {
	grpc.ClientStream
}

func (x *messageStatsStatsClient) Send(m *StatsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messageStatsStatsClient) Recv() (*StatsResponse, error) {
	m := new(StatsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessageStatsServer is the server API for MessageStats service.
type MessageStatsServer interface {
	Stats(MessageStats_StatsServer) error
}

// UnimplementedMessageStatsServer can be embedded to have forward compatible implementations.
type UnimplementedMessageStatsServer struct {
}

func (*UnimplementedMessageStatsServer) Stats(srv MessageStats_StatsServer) error {
	return status.Errorf(codes.Unimplemented, "method Stats not implemented")
}

func RegisterMessageStatsServer(s *grpc.Server, srv MessageStatsServer) {
	s.RegisterService(&_MessageStats_serviceDesc, srv)
}

func _MessageStats_Stats_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessageStatsServer).Stats(&messageStatsStatsServer{stream})
}

type MessageStats_StatsServer interface {
	Send(*StatsResponse) error
	Recv() (*StatsRequest, error)
	grpc.ServerStream
}

type messageStatsStatsServer struct {
	grpc.ServerStream
}

func (x *messageStatsStatsServer) Send(m *StatsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messageStatsStatsServer) Recv() (*StatsRequest, error) {
	m := new(StatsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessageStats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MessageStats",
	HandlerType: (*MessageStatsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "stats",
			Handler:       _MessageStats_Stats_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "stats.proto",
}
